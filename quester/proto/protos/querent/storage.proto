syntax = "proto3";

package querent.storage;

// StorageConfig is a message to hold configuration for a storage.
message StorageConfig {
  // Postgres configuration.
  PostgresConfig postgres = 1;
  // Milvus configuration.
  MilvusConfig milvus = 2;
  // Neo4j configuration.
  Neo4jConfig neo4j = 3;
}

// PostgresConfig is a message to hold configuration for a Postgres storage.
message PostgresConfig {
  // Name of the Postgres storage.
  string name = 1;
  // Type of the storage.
  StorageType storage_type = 2;
  // URL of the Postgres storage.
  string url = 3;
}

// MilvusConfig is a message to hold configuration for a Milvus storage.
message MilvusConfig {
  // Name of the Milvus storage.
  string name = 1;
  // Type of the storage.
  StorageType storage_type = 2;
  // URL of the Milvus storage.
  string url = 3;
  // Username for the Milvus storage.
  string username = 4;
  // Password for the Milvus storage.
  string password = 5;
}

// Neo4jConfig is a message to hold configuration for a Neo4j storage.
message Neo4jConfig {
  // Name of the Neo4j storage.
  string name = 1;
  // Type of the storage.
  StorageType storage_type = 2;
  // URL of the Neo4j storage.
  string url = 3;
  // Username for the Neo4j storage.
  string username = 4;
  // Password for the Neo4j storage.
  string password = 5;
  // Name of the database in the Neo4j storage.
  string db_name = 6;
  // Fetch size for the Neo4j storage.
  int32 fetch_size = 7;
  // Maximum connection pool size for the Neo4j storage.
  int32 max_connection_pool_size = 8;
}

// StorageType is a message to hold type of storage.
message StorageType {
  // Type of the storage.
  string type = 1;
}
