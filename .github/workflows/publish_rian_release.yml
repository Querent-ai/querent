name: Publish When Rian Release is Created
on:
  release:
    types:
      - published
  workflow_dispatch:
env:
  ASSET_VERSION: v0.7.0
  RELEASE_ID: ${{ github.event.release.id }}
jobs:
  release-rian-bare-metal:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin, 'x86_64-unknown-linux-gnu', 'x86_64-pc-windows-msvc.exe']
    steps:
      - run: echo "ASSET_FULL_NAME=rian-${{ env.ASSET_VERSION }}-${{ matrix.target }}" >> $GITHUB_ENV
      - name: Download the release artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ASSET_FULL_NAME }}.tar.gz
          run-id: 10333069333
      - name: Upload archive
        uses: quickwit-inc/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ env.ASSET_FULL_NAME }}.tar.gz
          overwrite: true
          tag_name: ${{ env.ASSET_VERSION }}

  publish-artifacts:
    needs: release-rian-bare-metal
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download R!AN Windows
        uses: actions/download-artifact@v4
        with:
          name: tauri-rian-bundle-windows-latest-x86_64
          path: artifacts/windows-x86_64
      - name: Download R!AN Mac (aarch64)
        uses: actions/download-artifact@v4
        with:
          name: tauri-rian-bundle-macos-latest-aarch64
          path: artifacts/darwin-aarch64
      - name: Download R!AN Mac (x86_64)
        uses: actions/download-artifact@v4
        with:
          name: tauri-rian-bundle-macos-latest-x86_64
          path: artifacts/darwin-x86_64
      - name: Download R!AN Linux
        uses: actions/download-artifact@v4
        with:
          name: tauri-rian-bundle-ubuntu-latest-x86_64
          path: artifacts/linux-x86_64
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: "https://registry.npmjs.org"
      - name: Generate update.json
        run: |
          npm install
          npm run updater
      - name: Upload update.json to release
        uses: quickwit-inc/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: update.json
          overwrite: true
          tag_name: ${{ env.ASSET_VERSION }}
      - name: Run artifact uploader
        env:
          ASSET_VERSION: ${{ env.ASSET_VERSION }}
          RELEASE_ID: ${{ env.RELEASE_ID }}
          TAG_NAME: ${{ env.ASSET_VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          npm run uploader
