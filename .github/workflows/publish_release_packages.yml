name: Build and publish release packages

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # ex. v1.0.0
      - 'v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+' # ex. v1.1.0-rc1
      - 'v0.0.1' # used for testing only
      - 'v0.0.1-rc[0-9]+' # used for testing only
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Release version (v#.#.#[-rc#])'
        required: true

env:
  ## use tags to determine the release version
  INPUT_RELEASE_VERSION: ${{ github.event.inputs.release-version || github.ref_name }}
jobs:
  # build-macos-binaries:
  #   name: Build ${{ matrix.target }}
  #   runs-on: macos-latest
  #   strategy:
  #     matrix:
  #       target: [x86_64-apple-darwin, aarch64-apple-darwin]

  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/cargo-build-macos-binary
  #       with:
  #         target: ${{ matrix.target }}
  #         version: ${{ env.INPUT_RELEASE_VERSION }}
  #         token: ${{ secrets.GITHUB_TOKEN }}

  # build-linux-binaries:
  #   strategy:
  #     matrix:
  #       target: [x86_64-unknown-linux-gnu]
  #   name: Build ${{ matrix.target }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/cross-build-binary
  #       with:
  #         target: ${{ matrix.target }}
  #         version: ${{ env.INPUT_RELEASE_VERSION }}
  #         token: ${{ secrets.GITHUB_TOKEN }}

  build-windows-binaries:
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]
    name: Build ${{ matrix.target }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/cargo-build-windows-binary
        with:
          target: ${{ matrix.target }}
          version: 4.1.0
          token: ${{ secrets.GITHUB_TOKEN }}
