name: Verify PR Commit
concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true
on:
  pull_request:
    branches:
      - main
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  REGISTRY_IMAGE: querent/rian

jobs:
  changes:
    name: Determine Changed Files
    runs-on: ubuntu-22.04
    outputs:
      rust: ${{steps.filter.outputs.rust}}
      build-binary: ${{steps.filter.outputs.build-binary}}
      cargo-lock: ${{steps.filter.outputs.cargo-lock}}
      run-e2e: ${{steps.filter.outputs.run-e2e}}
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Check for Changed Files
        uses: dorny/paths-filter@ebc4d7e9ebcb0b1eb21480bb8f43113e996ac77a
        id: filter
        with:
          filters: |
            rust:
              - '**/*.rs'
              - '**/*.hbs'
              - '.rustfmt.toml'
              - '**/Cargo.toml'
              - '**/Cargo.lock'
            build-binary:
              - '**/*.rs'
              - '**/*.hbs'
              - '.rustfmt.toml'
              - '**/Cargo.toml'
              - '**/Cargo.lock'
              - 'js/api-augment/**'
              - 'e2e/**/*.{ts,json}'
            cargo-lock:
              - '**/Cargo.toml'
              - '**/Cargo.lock'
            run-e2e:
              - '**/*.rs'
              - '**/Cargo.toml'
              - 'e2e/**/*.{ts,json}'
  verify:
    name: Check PR Commit
    runs-on: ubuntu-latest
    needs: changes
    if : ${{ needs.changes.outputs.rust == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: x86_64-unknown-linux-gnu

      - name: Cargo check
        run: cd querent && make check

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: [verify, changes]
    if: ${{ needs.changes.outputs.rust == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: x86_64-unknown-linux-gnu

      - name: Cargo test
        run: cd querent && make test

  lint:
    name: Run linter
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.rust == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: x86_64-unknown-linux-gnu

      - name: Cargo fmt
        run: cd querent && make format-check

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [verify, test, lint, changes]
    if: ${{ needs.changes.outputs.rust == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: x86_64-unknown-linux-gnu
      - name: Build
        run: cd querent && make build
  # generate-docs:
  #   name: Generate querent rust docs
  #   runs-on: ubuntu-latest
  #   needs: [verify]
  #   permissions:
  #     contents: read
  #     packages: write
  #     pages: write
  #     id-token: write
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: Install protoc
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y protobuf-compiler
  #     - name: Install Rust Toolchain
  #       uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
  #       with:
  #         toolchain: nightly
  #         default: true
  #         profile: minimal
  #         target: x86_64-unknown-linux-gnu

  #     - name: Setup Pages
  #       uses: actions/configure-pages@v3
  #     - name: Build Docs
  #       run: |
  #         cd querent && RUSTDOCFLAGS="--enable-index-page -Zunstable-options" cargo +nightly doc --no-deps --all-features
  #     - name: Fix file permissions
  #       shell: sh
  #       run: |
  #         chmod -c -R +rX "querent/target/doc" |
  #         while read line; do
  #             echo "::warning title=Invalid file permissions automatically fixed::$line"
  #         done

  #     - name: Upload Docs
  #       uses: actions/upload-pages-artifact@v1
  #       with:
  #         path: ./querent/target/doc
  #     - name: Deploy Docs
  #       uses: actions/deploy-pages@v2
  #       id: deployment
