name: Verify PR Commit
concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true
on:
  pull_request:
    branches:
      - 1.x
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  REGISTRY_IMAGE: querent/rian

jobs:
  changes:
    name: Determine Changed Files
    runs-on: ubuntu-22.04
    outputs:
      rust: ${{steps.filter.outputs.rust}}
      build-binary: ${{steps.filter.outputs.build-binary}}
      cargo-lock: ${{steps.filter.outputs.cargo-lock}}
      run-e2e: ${{steps.filter.outputs.run-e2e}}
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Check for Changed Files
        uses: dorny/paths-filter@ebc4d7e9ebcb0b1eb21480bb8f43113e996ac77a
        id: filter
        with:
          filters: |
            rust:
              - '**/*.rs'
              - '**/*.hbs'
              - '.rustfmt.toml'
              - '**/Cargo.toml'
              - '**/Cargo.lock'
            build-binary:
              - '**/*.rs'
              - '**/*.hbs'
              - '.rustfmt.toml'
              - '**/Cargo.toml'
              - '**/Cargo.lock'
              - 'js/api-augment/**'
              - 'e2e/**/*.{ts,json}'
            cargo-lock:
              - '**/Cargo.toml'
              - '**/Cargo.lock'
            run-e2e:
              - '**/*.rs'
              - '**/Cargo.toml'
              - 'e2e/**/*.{ts,json}'
  verify:
    name: Check PR Commit
    runs-on: ubuntu-latest
    needs: changes
    if : ${{ needs.changes.outputs.rust == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Setup Tauri and Specta Dependencies
        run: sudo apt-get update && sudo apt-get install javascriptcoregtk-4.1  libsoup-3.0 librust-atk-dev libwebkit2gtk-4.1-dev build-essential libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: x86_64-unknown-linux-gnu
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./querent -> target"
      - name: Cargo check
        run: cd querent && make check

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: [verify, changes]
    if: ${{ needs.changes.outputs.rust == 'true' }}
    env:
      AZURE_CONNECTION_STRING: ${{secrets.AZURE_CONNECTION_STRING}}
      AZURE_CREDENTIALS: ${{secrets.AZURE_CREDENTIALS}}
      DRIVE_CLIENT_SECRET: ${{secrets.DRIVE_CLIENT_SECRET}}
      DRIVE_CLIENT_ID: ${{secrets.DRIVE_CLIENT_ID}}
      DRIVE_REFRESH_TOKEN: ${{secrets.DRIVE_REFRESH_TOKEN}}
      GCS_CREDENTIALS: ${{secrets.GCS_CREDENTIALS}}
      ONEDRIVE_CLIENT_ID: ${{secrets.ONEDRIVE_CLIENT_ID}}
      ONEDRIVE_CLIENT_SECRET: ${{secrets.ONEDRIVE_CLIENT_SECRET}}
      ONEDRIVE_REFRESH_TOKEN: ${{secrets.ONEDRIVE_REFRESH_TOKEN}}
      AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
      AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}
      NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Setup Tauri and Specta Dependencies
        run: sudo apt-get update && sudo apt-get install javascriptcoregtk-4.1  libsoup-3.0 librust-atk-dev libwebkit2gtk-4.1-dev build-essential libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
      - name: Install Tesseract OCR
        run: sudo apt-get install -y tesseract-ocr
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: x86_64-unknown-linux-gnu
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./querent -> target"
      - name: Cargo test
        run: cd querent && make test

  lint:
    name: Run linter
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.rust == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: x86_64-unknown-linux-gnu
      - name: Cargo fmt
        run: cd querent && make format-check

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [verify, test, lint, changes]
    if: ${{ needs.changes.outputs.rust == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Setup Tauri and Specta Dependencies
        run: sudo apt-get update && sudo apt-get install javascriptcoregtk-4.1  libsoup-3.0 librust-atk-dev libwebkit2gtk-4.1-dev build-essential libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: x86_64-unknown-linux-gnu
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./querent -> target"
      - name: Build
        run: cd querent && make build
