name: Verify PR Commit
concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true
on:
  pull_request:
    branches:
      - main
  push :
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  REGISTRY_IMAGE: querent/quester

jobs:
  verify:
    name: Check PR Commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Cargo check
        run: cd quester && make check

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Cargo test
        run: cd quester && make test

  lint:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Cargo fmt
        run: cd quester && make format-check

  deny:
    name: Cargo Deny
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Set Up Cargo Deny
        run: |
          cd quester
          cargo install --force cargo-deny
          cargo generate-lockfile

      - name: License and Issue Check
        run: cd quester && make deny

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Cargo build
        run: cd quester && make build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
          labels: |
            org.opencontainers.image.title=Querent
            maintainer=Querent, AI LLC <contact@querent.xyz>
            org.opencontainers.image.vendor=Querent, AI
            org.opencontainers.image.licenses=BSL1.1
      - name: Retrieve commit date, hash, and tags
        run: |
          echo "QUESTER_COMMIT_DATE=$(TZ=UTC0 git log -1 --format=%cd --date=format-local:%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
          echo "QUESTER_COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "QUESTER_COMMIT_TAGS=$(git tag --points-at HEAD | tr '\n' ',')" >> $GITHUB_ENV
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            QUESTER_COMMIT_DATE=${{ env.QUESTER_COMMIT_DATE }}
            QUESTER_COMMIT_HASH=${{ env.QUESTER_COMMIT_HASH }}
            QUESTER_COMMIT_TAGS=${{ env.QUESTER_COMMIT_TAGS }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          tags: ${{ env.REGISTRY_IMAGE }},$GITHUB_SHA, "latest"
  generate-docs:
    name: Generate quester rust docs
    runs-on: ubuntu-latest
    needs: [verify, test, lint, build]
    permissions:
      contents: read
      packages: write
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build Docs
        run: |
          cd quester && RUSTDOCFLAGS="--enable-index-page -Zunstable-options" cargo doc --no-deps --all-features
      - name: Fix file permissions
        shell: sh
        run: |
          chmod -c -R +rX "quester/target/doc" |
          while read line; do
              echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Upload Docs
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./quester/target/doc
      - name: Deploy Docs
        uses: actions/deploy-pages@v2
        id: deployment
